name: Build and Test mod_replace

on:
  push:
    branches: [ main, develop ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]
  release:
    types: [ published ]

permissions:
  contents: write
  actions: read


jobs:
  build-ubuntu:
    name: Build on Ubuntu
    runs-on: ubuntu-latest
    strategy:
      matrix:
        ubuntu-version: ['20.04', '22.04', '24.04']
        apache-version: ['2.4']
        
    container:
      image: ubuntu:${{ matrix.ubuntu-version }}
      
    steps:
    - name: Install system dependencies
      run: |
        export DEBIAN_FRONTEND=noninteractive
        export TZ=Europe/Paris
        ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone
        apt-get update
        apt-get install -y \
          build-essential \
          cmake \
          git \
          apache2-dev \
          libapr1-dev \
          libaprutil1-dev \
          pkg-config
          
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Configure build environment
      run: |
        echo "CC=gcc" >> $GITHUB_ENV
        echo "CXX=g++" >> $GITHUB_ENV
        
    - name: Build project
      run: |
        mkdir -p build
        cd build
        cmake .. \
          -DCMAKE_BUILD_TYPE=Release \
          -DCMAKE_INSTALL_PREFIX=/usr
        make -j$(nproc)
        
    
    - name: Package artifacts
      run: |
        cd build
        mkdir -p artifacts
        cp mod_replace.so artifacts/
        cp libaho_corasick.a artifacts/
        
        # Create package info
        cat > artifacts/build-info.txt << EOF
        Build Information:
        - Ubuntu Version: ${{ matrix.ubuntu-version }}
        - Apache Version: ${{ matrix.apache-version }}
        - Build Date: $(date)
        - Git Commit: ${GITHUB_SHA}
        - Compiler: $(gcc --version | head -n1)
        EOF
        
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: mod_replace-ubuntu-${{ matrix.ubuntu-version }}
        path: build/artifacts/
        retention-days: 30

  build-rockylinux:
    name: Build on Rocky Linux 9
    runs-on: ubuntu-latest
    container:
      image: rockylinux:9
      
    steps:
    - name: Install system dependencies
      run: |
        dnf update -y
        dnf groupinstall -y "Development Tools"
        dnf install -y \
          cmake \
          git \
          httpd-devel \
          apr-devel \
          apr-util-devel \
          pkg-config
          
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Build project
      run: |
        mkdir -p build
        cd build
        cmake .. \
          -DCMAKE_BUILD_TYPE=Release \
          -DCMAKE_INSTALL_PREFIX=/usr
        make -j$(nproc)
        
        
    - name: Package artifacts
      run: |
        cd build
        mkdir -p artifacts
        cp mod_replace.so artifacts/
        cp libaho_corasick.a artifacts/
        
        cat > artifacts/build-info.txt << EOF
        Build Information:
        - OS: Rocky Linux 9
        - Build Date: $(date)
        - Git Commit: ${GITHUB_SHA}
        - Compiler: $(gcc --version | head -n1)
        EOF
        
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: mod_replace-rockylinux-9
        path: build/artifacts/
        retention-days: 30

  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: [build-ubuntu, build-rockylinux]
    if: github.event_name == 'release' || startsWith(github.ref, 'refs/tags/')
    
    steps:
    - name: Download Ubuntu 20.04 artifacts
      uses: actions/download-artifact@v4
      with:
        name: mod_replace-ubuntu-20.04
        path: ./ubuntu-20.04-artifacts
        
    - name: Download Ubuntu 22.04 artifacts
      uses: actions/download-artifact@v4
      with:
        name: mod_replace-ubuntu-22.04
        path: ./ubuntu-22.04-artifacts
        
    - name: Download Ubuntu 24.04 artifacts
      uses: actions/download-artifact@v4
      with:
        name: mod_replace-ubuntu-24.04
        path: ./ubuntu-24.04-artifacts
        
    - name: Download Rocky Linux artifacts
      uses: actions/download-artifact@v4
      with:
        name: mod_replace-rockylinux-9  
        path: ./rockylinux-artifacts
        
    - name: Create release packages
      run: |
        # Create Ubuntu packages
        cd ubuntu-20.04-artifacts
        tar -czf ../mod_replace-ubuntu-20.04.tar.gz *
        cd ..
        
        cd ubuntu-22.04-artifacts
        tar -czf ../mod_replace-ubuntu-22.04.tar.gz *
        cd ..
        
        cd ubuntu-24.04-artifacts
        tar -czf ../mod_replace-ubuntu-24.04.tar.gz *
        cd ..
        
        # Create Rocky Linux package
        cd rockylinux-artifacts
        tar -czf ../mod_replace-rockylinux-9.tar.gz *
        cd ..
        
    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: |
          mod_replace-ubuntu-20.04.tar.gz
          mod_replace-ubuntu-22.04.tar.gz
          mod_replace-ubuntu-24.04.tar.gz
          mod_replace-rockylinux-9.tar.gz
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Upload release assets (for published releases)
      if: github.event_name == 'release'
      uses: softprops/action-gh-release@v1
      with:
        files: |
          mod_replace-ubuntu-20.04.tar.gz
          mod_replace-ubuntu-22.04.tar.gz
          mod_replace-ubuntu-24.04.tar.gz
          mod_replace-rockylinux-9.tar.gz
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}