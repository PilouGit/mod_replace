name: Quick Tests

on:
  push:
    branches: [ main, develop, feature/* ]
  pull_request:
    branches: [ main, develop ]

jobs:
  quick-test:
    name: Quick Build and Test
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          build-essential \
          cmake \
          apache2-dev \
          libapr1-dev \
          valgrind
          
    - name: Build
      run: |
        mkdir build && cd build
        cmake ..
        make -j$(nproc)
        
    - name: Run unit tests
      run: |
        cd build
        ./test_aho_corasick
        ./test_valgrind
        
    - name: Run CTest
      run: |
        cd build
        ctest --output-on-failure
        
    - name: Check memory leaks
      run: |
        cd build
        timeout 60 make valgrind-aho-corasick || true
        
        if [ -f valgrind-aho-corasick.log ]; then
          if grep -q "ERROR SUMMARY: 0 errors" valgrind-aho-corasick.log; then
            echo "✅ No memory leaks detected"
          else
            echo "❌ Memory leaks detected"
            tail -20 valgrind-aho-corasick.log
            exit 1
          fi
        fi

  lint:
    name: Code Linting
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Install clang-format
      run: |
        sudo apt-get update
        sudo apt-get install -y clang-format
        
    - name: Check code formatting
      run: |
        find src inc test -name "*.c" -o -name "*.h" | \
          xargs clang-format --dry-run --Werror --style="{BasedOnStyle: Google, IndentWidth: 4, ColumnLimit: 100}"
        
    - name: Run static analysis
      run: |
        sudo apt-get install -y cppcheck
        cppcheck --enable=all --error-exitcode=1 src/ inc/ || true